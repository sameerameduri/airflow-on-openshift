
airflow:
  image:
    repository: apache/airflow
    tag: 2.6.3-python3.9
    uid: 1000730000
    gid: 0

  executor: CeleryExecutor
  fernetKey: "7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc="
  webserverSecretKey: "ShouldNotBeInProduction"

  ## a list of users to create
  ## - templates can ONLY be used in: `password`, `email`, `firstName`, `lastName`
  ## - templates used a bash-like syntax: ${MY_USERNAME}, $MY_USERNAME
  ## - templates are defined in `usersTemplates`
  ## - `role` can be a single role or a list of roles
  ##
  users:
    - username: admin
      password: admin
      role: Admin
      email: admin@example.com
      firstName: admin
      lastName: admin

  
  defaultSecurityContext:
    ## sets the filesystem owner group of files/folders in mounted volumes
    ## this does NOT give root permissions to Pods, only the "root" group
    fsGroup: 1000730000
 


  ########################################
  ## COMPONENT | db-migrations Deployment
  ########################################
  dbMigrations:
    ## if the db-migrations Deployment/Job is created
    ## - [WARNING] if `false`, you have to MANUALLY run `airflow db upgrade` when required
    ##
    enabled: true

    ## if a post-install helm Job should be used (instead of a Deployment)
    ## - [WARNING] setting `true` will NOT work with the helm `--wait` flag,
    ##   this is because post-install helm Jobs run AFTER the main resources become Ready,
    ##   which will cause a deadlock, as other resources require db-migrations to become Ready
    ##
    runAsJob: false
   

scheduler:
  replicas: 1
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 2
      memory: 2Gi
  logCleanup:
    enabled: false
    retentionMinutes: 2
  livenessProbe:
    enabled: true
    taskCreationCheck:
      enabled: false
      thresholdSeconds: 300
      schedulerAgeBeforeCheck: 180

web:
  replicas: 2
  readinessProbe:
    initialDelaySeconds: 45
  livenessProbe:
    initialDelaySeconds: 60
  securityContext:
    runAsUser: 1000730000
    runAsGroup: 0

workers:
  enabled: true
  replicas: 2
  resources:
    limits:
      cpu: 1
      memory: 3Gi
    requests:
      cpu: 1
      memory: 1Gi
  logCleanup:
    enabled: false
    retentionMinutes: 2

# Airflow Triggerer Config
triggerer:
  enabled: true
  replicas: 1

statsd:
  uid: null

pgbouncer:
  enabled: false

redis:
  securityContext: 
    fsGroup: 1000730000
    runAsUser: 1000730000
    runAsGroup: 0

dags:
  runAsUser: 1000730000
  runAsGroup: 0
  persistence:
    enabled: false
  gitSync:
    securityContext:
      runAsUser: 1000730000
      runAsGroup: 0
    enabled: true
    repo: https://github.com/sameerameduri/airflow-on-openshift
    branch: main
    subPath: dags
    syncWait: 60
    httpSecret: "airflow-http-git-secret"
    httpSecretUsernameKey: bmeduri-git
    httpSecretPasswordKey: admin
  


logs:
  persistence:
    enabled: true
    existingClaim: airflow-pvc


flower:
  enabled: false

# ingress:
#   web:
#     enabled: true

postgresql:
  enabled: false
  volumePermissions:
    enabled: true
    securityContext:
      runAsUser: "auto"
  securityContext:
    enabled: false
  shmVolume:
    chmod:
      enabled: false
  containerSecurityContext:
    enabled: false
  allowPrivilegeEscalation: false
  runAsUser:
  # Require the container to run without root privileges.
  rule: 'MustRunAsNonRoot'

externalDatabase:
  type: postgres

  host: postgresql.my-postgresql.svc
  port: 5432

  ## the schema which will contain the airflow tables
  database: sampledb

  ## (username - option 1) a plain-text helm value
  user: userV8X

  ## (username - option 2) a Kubernetes secret in your airflow namespace
  #userSecret: "kepler-airflow-dev-secrets"
  #userSecretKey: AIRFLOW_POSTGRES_USER

  ## (password - option 1) a plain-text helm value
  password: rAArDGTFJ0r3enbd

  ## (password - option 2) a Kubernetes secret in your airflow namespace
  #passwordSecret: "kepler-airflow-dev-secrets"
  #passwordSecretKey: AIRFLOW_POSTGRES_PASSWORD

  ## use this for any extra connection-string settings, e.g. ?sslmode=disable
  properties: ""
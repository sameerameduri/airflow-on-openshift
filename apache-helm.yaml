
airflow:
  legacyCommands: false
  image:
    repository: apache/airflow
    tag: 2.6.3-python3.9
    pullPolicy: IfNotPresent
    pullSecret: ""
    uid: 1000690000
    gid: 1000690000

  executor: CeleryExecutor

  fernetKey: "7T512UXSSmBOkpWimFHIVb8jK6lfmSAvx4mO6Arehnc="

  webserverSecretKey: "THIS IS UNSAFE!"

  protectedPipPackages:
    - "apache-airflow"

  dbMigrations:
      enabled: true
      runAsJob: false

scheduler:
  replicas: 1

  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 2
      memory: 2Gi

  logCleanup:
    enabled: true
    retentionMinutes: 21600
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 60
    failureThreshold: 5

web:
  replicas: 1

  ## configs for the web Pods' readiness probe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6

  ## configs for the web Pods' liveness probe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6

workers:
  enabled: true
  replicas: 1
  logCleanup:
    enabled: true
    retentionMinutes: 21600
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 60
    failureThreshold: 5

triggerer:
  enabled: true
  replicas: 1
  capacity: 1000
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 60
    failureThreshold: 5


flower:
  enabled: false

logs:
  path: /opt/airflow/logs
  persistence:
    enabled: false
    existingClaim: airflow-pvc

dags:
  path: /opt/airflow/dags
  persistence:
    enabled: false
  gitSync:
    enabled: true
    repo: https://github.com/sameerameduri/airflow-on-openshift
    branch: main
    subPath: dags

ingress:
  enabled: false

rbac:
  ## if Kubernetes RBAC resources are created
  ## - these allow the service account to create/delete Pods in the airflow namespace,
  ##   which is required for the KubernetesPodOperator() to function
  ##
  create: false

serviceAccount:
  ## if a Kubernetes ServiceAccount is created
  ## - if `false`, you must create the service account outside this chart with name: `serviceAccount.name`
  ##
  create: true

  ## the name of the ServiceAccount
  ## - by default the name is generated using the `airflow.serviceAccountName` template in `_helpers/common.tpl`
  ##
  name: "airflow"


pgbouncer:
  ## if the pgbouncer Deployment is created
  ##
  enabled: false

  ## configs for the pgbouncer container image
  ##
  image:
    repository: ghcr.io/airflow-helm/pgbouncer
    tag: 1.18.0-patch.1
    pullPolicy: IfNotPresent
    uid: 1001
    gid: 1001



postgresql:
  primary:
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false


redis:
  uid: null


prometheusRule:
  ## if PrometheusRule resources should be deployed for airflow webserver
  ## - [WARNING] you will need a metrics exporter in your `airflow.image`, for example:
  ##   https://github.com/epoch8/airflow-exporter
  ## - PrometheusRule is a resource from prometheus-operator:
  ##   https://github.com/prometheus-operator/prometheus-operator
  ##
  enabled: false

  ## labels for PrometheusRule, so that Prometheus can select it
  ##
  additionalLabels: {}

  ## alerting rules for Prometheus
  ## - docs for alerting rules: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/
  ##
  groups: []
